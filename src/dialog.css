:root {
    --colorPanelBorder: #b6b6b6;
    --colorTextNeutral: #9d9d9d;

    --durationFast: 0.1s;
    --durationFast2: 0.2s;
    --durationMedium: 0.5s;
    --durationSlow: 1.5s;

    --borderRadiusSmall: 0.25em;

    --buttonHeight: 3em;
    --buttonHeightMobile: 2em;

    --contentPadding: 1em;
}

/* PARENT DIV */

.dialogParent {
    width: 100%;
    height: 100%;
    /* height: 500px; */
    display: absolute;
    position: absolute;
    justify-content: center;
    align-items: center;
    display: flex;

    pointer-events: none;
}

/* DIALOG BACKGROUND */
/* used for the backdrop effect - won't work in Firefox otherwise */

.dialogBackdrop {
    height: 100%;
    width: 100%;
    position: absolute;
    z-index: 12;
    background: rgba(0, 0, 0, 0.5);

    display: none;
    pointer-events: auto;
}

/* MODAL DIALOG */

dialog {
    border: none !important;
    border-radius: 1em;
    padding: 1.5em;
    z-index: 13;
    pointer-events: auto;
    border: none !important;
    border-radius: 1em;
    padding: 1.5em;
    overflow: visible;
}

/* ONBOARDING DIALOG */

#FirstTimePopup {
    min-width: 400px;
    text-align: center;
}

.twoGrid {
    margin: 1em 0;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2em;
    height: 4em;
}

button {
    cursor: pointer;
}

.thickButton {
    font-size: 1.5em;
    font-family: 'LilitaOne';
    font-family: "Poppins", sans-serif;
    font-weight: bolder;
    color: white;
    color: var(--colorTextNeutral);
    background-color: var(--colorTextNeutral);
    background-color: white;
    white-space: nowrap;
    border-color: var(--colorPanelBorder);
    border: 2px solid var(--colorPanelBorder);
    transition-duration: var(--durationFast);
    border-radius: var(--borderRadiusSmall);

    overflow: hidden;
    box-sizing: border-box;
    max-width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.thickButton:hover {
    font-size: 1.75em;
    transition-duration: var(--durationFast);
    filter: brightness(90%);
    border-width: 6px;
    letter-spacing: 1px;
}

.thickButton span {
    position: absolute;
}







dialog:-internal-dialog-in-top-layer::backdrop {
    position: fixed;
    inset: 0px;
    background: rgba(0, 0, 0, 0.3);
}

.formInputSection {
    gap: 1em;
    display: flex;
    flex-direction: column;;
}

label {
    min-width: 120px;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

form div {
    display: flex;
    flex-basis: 100%;
}

.SideBySide {
    gap: 1em;
}

input[type="text" i], input[type="number" i] { /*[type=text]*/
    float: right;
    padding: 1em;
    border: none;
    font-size: 17px;

    border-radius: calc(var(--border-radius)/2);
    background-color: var(--main-color-light);
    padding-left: 1em;

    width: 100%;
}

#dialogHeaderText {
    text-align: center;
    margin: 0;
}

.addNewBookDialogDiv {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2em;
}

.addNewBookDialogDiv button {
    width: 60%;
    padding-top: 1em;
}

.buttonImage {
    width: 24px;
    height: 24px;
    cursor: pointer;
}

.closeButtonDiv {
    position: absolute;
    top: 0.5em;
    right: 0.5em;
    aspect-ratio: 1 / 1;
    width: 2em;
    /* height: 2em; */
}

.closeButtonDiv button {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    border-width: 0;
    font-size: x-large;
    transform: rotate(45deg);
    text-align: center;
    /* padding: 2.5em; */
    padding: 0;
    /* aspect-ratio: 1 / 1; */
    /* width: 2em;*/

    cursor: pointer;
}

dialog textarea {
    width: 100%;
    height: 10em;
    padding: 1em;
    box-sizing: border-box;
    border: 2px solid #ccc;
    border-radius: 4px;
    background-color: #f8f8f8;
    font-size: 16px;
}

#dialogSaveButton {
    padding: 12px 24px;
    border-radius: 1.5em;
    border: 0px;
    text-decoration: none;
    color: white;
    background-color: var(--main-color);
    text-align: center;
    font-size: 16px;
    font-weight: bold;
    width: 60%;
    height: 3em;
    transition: var(--transition-time);
    cursor: pointer;
}